syntax = "proto3";

package heartbeat_system;

service HeartBeat {
	rpc RegisterNode (NodeInfo) returns (RegistrationStatus);
	rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse);
	rpc GetClusterStatus (ClientInfo) returns (ClusterStatus);
	rpc CreateNewTopic(CreateTopicRequest) returns (CreateTopicResponse);
  rpc CorfuSequencer(CorfuSequencerRequest) returns (CorfuSequencerResponse);
}

enum SequencerType{
	EMBARCADERO = 0;
	KAFKA = 1;
	SCALOG = 2;
	CORFU = 3;
}

message ClientInfo{
	repeated int32 nodes_info = 1;
}

message ClusterStatus{
	repeated string new_nodes = 1;
	repeated int32 removed_nodes = 2;
}

message NodeInfo {
	string node_id = 1;
	string address = 2;
}

message RegistrationStatus {
	bool success = 1;
	int64 broker_id = 2;
	string message = 3;
}

message HeartbeatRequest {
	string node_id = 1;
}

message HeartbeatResponse {
	bool alive = 1;
}

message CreateTopicRequest {
	string topic = 1;
	int32 order = 2;
	SequencerType sequencer_type = 3;
}

message CreateTopicResponse {
	bool success = 1;
}

message CorfuSequencerRequest {
  uint32 batch_size = 1;
}

message CorfuSequencerResponse {
  uint32 order_start = 1;
}

